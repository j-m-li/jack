
class Keyboard {
	function void exit() {
#c #ifndef _WIN32
#c 	fcntl(STDIN_FILENO, F_SETFL, Keyboard__flags);
#c #endif
#py 	global ts
#py 	if (sys.stdin.closed == 0):
#py 		termios.tcsetattr(sys.stdin.fileno(), termios.TCSADRAIN, ts)
		return;
	}

	function void exits(int a, int b) {
		do Keyboard.exit();
		return;
	}

	function void init() {
#c #ifndef _WIN32
#c 	atexit((void(*)())Keyboard__exit);
#c 	Keyboard__flags = fcntl(STDIN_FILENO, F_GETFL, 0);
#c 	fcntl(STDIN_FILENO, F_SETFL, Keyboard__flags | O_NONBLOCK);
#c #endif
#py 	global keybuf
#py 	global keyindex
#py 	global ts
#py 	ts = termios.tcgetattr(sys.stdin.fileno())
#py 	keybuf=""
#py 	keyindex = 0;
#py 	atexit.register(Keyboard__exit)
#py 	signal.signal(signal.SIGINT, Keyboard__exits) # ctlr + c
#py 	signal.signal(signal.SIGTSTP, Keyboard__exits) # ctlr + z
		return;
	}

	function void deInit() {
		return;
	}

	function char keyPressed() {
		var int x;
		let x = Keyboard.getChar();
		if (x = 10) {
			return 128; // newline
		}				
		if (x = 127) {
			return 129; //backspace
		}		
				
		if (x = 27) {
			let x = Keyboard.getChar();
			if (x = 0) {
				return 140; // ESC
			}
			//do Output.printInt(x);
			//do Output.println();
			if (x = 91) {
				let x = Keyboard.getChar();
				if (x = 65) {
					let x = 131; // up
				}
				if (x = 66) {
					let x = 133; // down
				}
				if (x = 67) {
					let x = 132;  // right
				}
				if (x = 68) {
					let x = 130; // left
				}
				// FIXME
				// 136 page up
				// 137 page down
				// 138 insert
				// 139 delete
				// 134 home
				// 135 end
			} else { if (x = 79) {
				let x = Keyboard.getChar();
				let x = (x - 80) + 141; // F1-F10
			} else { if (x = 50) {
				let x = Keyboard.getChar();
				let x = (x - 125) + 150; // 151-152 F11-F12
			}}}
		}
		return x;
	}

	function char getChar() {
		var int x;
		let x = 0;
#c #ifndef _WIN32
#c 	x = getchar();
#c #else
#c 	if (_kbhit()) {
#c 		x = _getch();
#c 	}
#c #endif
#py 	global keybuf
#py 	global keyindex
#py 	global ts
#py 	global tk
#py 	if (len(keybuf) > keyindex):
#py 		x = ord(keybuf[keyindex])
#py 		keyindex = keyindex + 1
#py 		return x
#py 	if (tk != None):
#py 		tk.update()
#py 	tty.setcbreak(sys.stdin.fileno())
#py 	n = select.select([sys.stdin],[],[],.01)[0]
#py 	if (n):
#py 		keybuf = sys.stdin.buffer.peek(1)
#py 		keybuf = (sys.stdin.read(len(keybuf)))
#py 		x = ord(keybuf[0])
#py 		keyindex = 1
#py 	termios.tcsetattr(sys.stdin.fileno(), termios.TCSADRAIN, ts)
		return x;
	}

	function char readChar() {
		return 0;
	}

	function String readLine(String message) {
		var String s;
		let s = String.new(256);
		return s;
	}

	function int readInt(String message) {
		return 0;
	}
}

