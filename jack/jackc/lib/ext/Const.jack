/*
 *                     jack public domain compiler
 *
 *                      15 may MMXXI PUBLIC DOMAIN
 *           The author disclaims copyright to this source code.
 *
 *
 */


class Const {
	function Buffer getList() {
		var Buffer b;
		var String s;
		let b = Buffer.new(256, null);
		let s = " ";do s.setCharAt(0, 0);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 1);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 2);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 3);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 4);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 5);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 6);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 7);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 8);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 9);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 10);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 11);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 12);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 13);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 14);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 15);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 16);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 17);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 18);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 19);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 20);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 21);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 22);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 23);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 24);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 25);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 26);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 27);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 28);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 29);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 30);
		do b.append(s);
		let s = " ";do s.setCharAt(0, 31);
		do b.append(s);
		do b.append(" ");
		do b.append("!");
		let s = " ";do s.setCharAt(0, 34);
		do b.append(s);
		do b.append("#");
		do b.append("$");
		do b.append("%");
		do b.append("&");
		do b.append("'");
		do b.append("(");
		do b.append(")");
		do b.append("*");
		do b.append("+");
		do b.append(",");
		do b.append("-");
		do b.append(".");
		do b.append("/");
		do b.append("0");
		do b.append("1");
		do b.append("2");
		do b.append("3");
		do b.append("4");
		do b.append("5");
		do b.append("6");
		do b.append("7");
		do b.append("8");
		do b.append("9");
		do b.append(":");
		do b.append(";");
		do b.append("<");
		do b.append("=");
		do b.append(">");
		do b.append("?");
		do b.append("@");
		do b.append("A");
		do b.append("B");
		do b.append("C");
		do b.append("D");
		do b.append("E");
		do b.append("F");
		do b.append("G");
		do b.append("H");
		do b.append("I");
		do b.append("J");
		do b.append("K");
		do b.append("L");
		do b.append("M");
		do b.append("N");
		do b.append("O");
		do b.append("P");
		do b.append("Q");
		do b.append("R");
		do b.append("S");
		do b.append("T");
		do b.append("U");
		do b.append("V");
		do b.append("W");
		do b.append("X");
		do b.append("Y");
		do b.append("Z");
		do b.append("[");
		do b.append("\\");
		do b.append("]");
		do b.append("^");
		do b.append("_");
		do b.append("`");
		do b.append("a");
		do b.append("b");
		do b.append("c");
		do b.append("d");
		do b.append("e");
		do b.append("f");
		do b.append("g");
		do b.append("h");
		do b.append("i");
		do b.append("j");
		do b.append("k");
		do b.append("l");
		do b.append("m");
		do b.append("n");
		do b.append("o");
		do b.append("p");
		do b.append("q");
		do b.append("r");
		do b.append("s");
		do b.append("t");
		do b.append("u");
		do b.append("v");
		do b.append("w");
		do b.append("x");
		do b.append("y");
		do b.append("z");
		do b.append("{");
		do b.append("|");
		do b.append("}");
		do b.append("~");
		let s = " ";do s.setCharAt(0, 127);
		do b.append(s);
		do b.append("invalid");
		do b.append("null");
		do b.append("none");
		do b.append("keyword");
		do b.append("symbol");
		do b.append("identifier");
		do b.append("int_const");
		do b.append("string_const");
		do b.append("class");
		do b.append("method");
		do b.append("function");
		do b.append("constructor");
		do b.append("callback");
		do b.append("int");
		do b.append("boolean");
		do b.append("char");
		do b.append("void");
		do b.append("var");
		do b.append("static");
		do b.append("field");
		do b.append("let");
		do b.append("do");
		do b.append("if");
		do b.append("else");
		do b.append("while");
		do b.append("return");
		do b.append("true");
		do b.append("false");
		do b.append("null");
		do b.append("this");
		do b.append("asm");
		do b.append("plus");
		do b.append("minus");
		do b.append("multiply");
		do b.append("div");
		do b.append("and");
		do b.append("or");
		do b.append("greater");
		do b.append("less");
		do b.append("equal");
		do b.append("root");
		do b.append("expr");
		do b.append("call");
		do b.append("classname");
		do b.append("args");
		do b.append("varname");
		do b.append("array");
		do b.append("assign");
		do b.append("statements");
		do b.append("params");
		do b.append("vars");
		do b.append("type");
		do b.append("string");
		do b.append("arrayvar");
		do b.append("paran");
		do b.append("unaryop");
		do b.append("term");
		do b.append("op");
		do b.append("dot");
		do b.append("body");
		do b.append("subroutinename");
		do b.append("unaryminus");
		do b.append("unaryplus");
		do b.append("unarytilde");
		do b.append("subroutinecall");
		do b.append("classorvarname");
		do b.append("next_free_constant");
		return b;
	}
}
